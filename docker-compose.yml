version: "3.8"

services:
  # LocalStack - AWS Services Emulation
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,dynamodb,lambda,apigateway,iam
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "./volume:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - localstack-network

  # Next.js GUI Application (with hot reload)
  gui:
    build:
      context: .
      dockerfile: Dockerfile.gui
    container_name: localstack-gui
    volumes:
      - ./localstack-gui:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    networks:
      - localstack-network
    restart: unless-stopped
    command: npm run dev

  # Express.js API Server (with hot reload)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: localstack-api
    environment:
      - PORT=3031
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - ./localstack-api:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./scripts:/app/scripts
    ports:
      - "3031:3031"
    depends_on:
      - localstack
    networks:
      - localstack-network
    restart: unless-stopped
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: localstack-nginx
    ports:
      - "3030:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - gui
      - api
      - localstack
    networks:
      - localstack-network
    restart: unless-stopped

networks:
  localstack-network:
    driver: bridge

volumes:
  localstack_data:
